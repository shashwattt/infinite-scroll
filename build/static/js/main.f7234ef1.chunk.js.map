{"version":3,"sources":["serviceWorker.js","utils/constants.js","utils/helper.js","components/MessageCard/MessageCard.js","containers/Home/Home.js","containers/Setting/settingsReducer.js","containers/Setting/Setting.js","components/Header/index.js","components/Header/Header.js","layouts/MainLayout.js","components/Sidebar/Sidebar.js","layouts/EmptyLayout.js","App.js","containers/Home/counterReducer.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","BASE_URL","getMessageAge","updatedOn","diff","Date","year","Math","abs","floor","leftSec","months","days","hrs","min","MessageCard","message","Card","style","marginBottom","CardHeader","avatar","Avatar","alt","author","name","src","photoUrl","title","subheader","updated","CardContent","Typography","content","Home","useState","messages","setMessages","pageToken","setPageToken","useEffect","fetchMoreData","queryParam","fetch","then","res","json","dataLength","length","scrollThreshold","next","display","flexDirection","alignItems","justifyContent","overflow","hasMore","loader","scrollableTarget","map","msg","key","id","axis","onChangeIndex","msgIndex","findIndex","splice","width","primaryColor","deepPurple","secondaryColor","purple","themeConfig","typography","useNextVariants","palette","primary","secondary","error","red","contrastThreshold","tonalOffset","defaultTheme","settings","createSlice","initialState","theme","darkMode","colorsSwaped","reducers","toggleThemeMode","state","action","payload","type","value","swapThemeColors","actions","isDarkMode","isColorSwaped","getTheme","Setting","useSelector","colorSwaped","dispatch","useDispatch","variant","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Switch","onChange","e","checked","Header","withStyles","toolbarRoot","paddingRight","minHeight","menuButton","marginLeft","marginRight","flexGrow","props","classes","handleToggleDrawer","AppBar","position","Toolbar","disableGutters","root","IconButton","color","aria-label","onClick","className","noWrap","MainLayout","drawerPaper","top","spacing","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","open","Drawer","paper","classNames","to","button","setState","prevState","this","children","Component","padding","marginTop","contentShift","EmptyLayout","height","NotFound","DashboardRoute","component","rest","render","matchProps","EmptyRoute","App","theTheme","createMuiTheme","CssBaseline","path","exact","counter","increment","decrement","configureStore","reducer","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7234ef1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const BASE_URL = \"https://message-list.appspot.com\"","export const getMessageAge = (updatedOn) => {\n\tvar today = new Date();\n\n\tvar diff = (today - new Date(updatedOn)) / 1000;\n\tvar diff = Math.abs(Math.floor(diff));\n\n\tvar year = Math.floor(diff / (12 * 30 * 24 * 60 * 60));\n\tvar leftSec = diff - year * 12 * 30 * 24 * 60 * 60;\n\n\tvar months = Math.floor(leftSec / (30 * 24 * 60 * 60));\n\tvar leftSec = leftSec - months * 30 * 24 * 60 * 60;\n\n\tvar days = Math.floor(leftSec / (24 * 60 * 60));\n\tvar leftSec = leftSec - days * 24 * 60 * 60;\n\n\tvar hrs = Math.floor(leftSec / (60 * 60));\n\tvar leftSec = leftSec - hrs * 60 * 60;\n\n\tvar min = Math.floor(leftSec / 60);\n\n\tif (year > 0) {\n\t\treturn `${year === 1 ? \"A year\" : `${year} years`}  ago`;\n\t} else if (months > 0) {\n\t\treturn `${months === 1 ? \"A month\" : `${months} months`}  ago`;\n\t} else if (days > 0) {\n\t\treturn `${days === 1 ? \"A day\" : `${days} days`}  ago`;\n\t} else if (hrs > 0) {\n\t\treturn `${hrs === 1 ? \"An hour\" : `${hrs} hrs`}  ago`;\n\t} else {\n\t\treturn `${min === 1 ? \"A minute\" : `${min} minutes`}  ago`;\n\t}\n};\n\nexport const throttle = (callback, time) => {\n    let throttleTimer;\n    if (throttleTimer) return;\n\tthrottleTimer = true;\n\tsetTimeout(() => {\n\t\tcallback();\n\t\tthrottleTimer = false;\n\t}, time);\n};\n","import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { BASE_URL } from '../../utils/constants';\nimport { getMessageAge } from '../../utils/helper';\n\nexport default function MessageCard({message = {}}) {\n\n  return (\n    <Card style={{marginBottom: \"8px\"}}>\n      <CardHeader \n        avatar={\n          <Avatar alt={message.author.name} src={BASE_URL + message.author.photoUrl} />\n\n        }\n        title={message.author.name}\n        subheader={getMessageAge(message.updated)}\n      />\n      \n      <CardContent>\n        <Typography>\n          {message.content}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport MessageCard from \"../../components/MessageCard/MessageCard\";\nimport { BASE_URL } from \"../../utils/constants\";\n\nexport default function Home() {\n\tconst [messages, setMessages] = useState([]);\n\tconst [pageToken, setPageToken] = useState(null);\n\n\tuseEffect(() => fetchMoreData(), []);\n\n\tconst fetchMoreData = () => {\n\t\tconst queryParam = pageToken ? `?pageToken=${pageToken}` : \"\";\n\t\tfetch(`${BASE_URL}/messages${queryParam}`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetMessages([...messages, ...res.messages]);\n\t\t\t\tsetPageToken(res.pageToken);\n\t\t\t});\n\t};\n\n\tconst handleSwipe = (id) => () => {\n\t\tconst msgIndex = messages.findIndex(msg => msg.id === id);\n\t\tmessages.splice(msgIndex, 1);\n\t\tsetMessages([...messages])\n\t};\n\n\treturn (\n\t\t<InfiniteScroll\n\t\t\tdataLength={messages.length}\n\t\t\tscrollThreshold={0.7}\n\t\t\tnext={fetchMoreData}\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\toverflow: \"auto\",\n\t\t\t}}\n\t\t\thasMore={true}\n\t\t\tloader={<h4>Loading...</h4>}\n\t\t\tscrollableTarget=\"scrollableDiv\">\n\t\t\t{messages.map((msg) => {\n\t\t\t\treturn (\n\t\t\t\t\t<SwipeableViews key={msg.id} axis=\"x-reverse\" onChangeIndex={handleSwipe(msg.id)}>\n\t\t\t\t\t\t<MessageCard message={msg} />\n\t\t\t\t\t\t<div style={{width: \"50vw\"}} />\n\t\t\t\t\t</SwipeableViews>\n\t\t\t\t);\n\t\t\t})}\n\t\t</InfiniteScroll>\n\t);\n}\n","import deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport red from \"@material-ui/core/colors/red\";\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst primaryColor = deepPurple;\nconst secondaryColor = purple;\n\nconst themeConfig = {\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: deepPurple,\n    secondary: purple,\n    error: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n};\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst defaultTheme = themeConfig;\n\nexport const settings = createSlice({\n  name: 'settings',\n  initialState: {\n    theme: defaultTheme,\n    darkMode: false,\n    colorsSwaped: false\n  },\n  reducers: {\n    toggleThemeMode: (state, action) => {\n      if (action.payload) { //darknode set\n        state.darkMode = true;\n        state.theme = {\n          ...themeConfig,\n          palette: {\n            ...themeConfig.palette,\n            primary: state.theme.palette.primary,\n            secondary: state.theme.palette.secondary,\n            type: \"dark\"\n          }\n        };\n      } else {\n        state.darkMode = false;\n        state.theme = {\n          ...themeConfig,\n          palette: {\n            ...themeConfig.palette,\n            primary: state.theme.palette.primary,\n            secondary: state.theme.palette.secondary\n          }\n        };\n      }\n\n      state.value = action.payload;\n    },\n    swapThemeColors: (state, action) => {\n      if (action.payload) { // colorsSwaped\n        state.colorsSwaped = true;\n        state.theme = {\n            ...themeConfig,\n            palette: {\n              ...state.theme.palette,\n              primary: secondaryColor,\n              secondary: primaryColor\n            }\n          };\n      } else {\n        state.colorsSwaped = false;\n        state.theme = {\n          ...themeConfig,\n          palette: {\n            ...state.theme.palette,\n            primary: primaryColor,\n            secondary: secondaryColor\n          }\n        };\n      }\n    },\n  },\n});\n\nexport const { toggleThemeMode, swapThemeColors } = settings.actions;\n\nexport const isDarkMode = state => state.settings.darkMode;\n\nexport const isColorSwaped = state => state.settings.colorsSwaped;\n\nexport const getTheme = state => state.settings.theme;\n\nexport default settings.reducer;","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { toggleThemeMode, swapThemeColors, isDarkMode, isColorSwaped } from \"./settingsReducer\";\n\nexport default function Setting() {\n\n  const darkMode = useSelector(isDarkMode);\n  const colorSwaped = useSelector(isColorSwaped);\n\n  const dispatch = useDispatch();\n\n  return (\n  <div>\n    <Typography variant=\"h5\">Settings</Typography>\n    <Card>\n      <CardContent>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <PaletteIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dark Mode\" />\n            <ListItemSecondaryAction>\n              <Switch\n                onChange={(e, checked) =>  dispatch(toggleThemeMode(checked))}\n                checked={darkMode}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <CompareArrowsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Swap Colors\" />\n            <ListItemSecondaryAction>\n              <Switch\n                onChange={(e, checked) => dispatch(swapThemeColors(checked))}\n                checked={colorSwaped}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  </div>);\n};\n","import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  toolbarRoot: {\n    paddingRight: 24,\n    minHeight: 72\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\nconst Header = props => {\n  const { classes, handleToggleDrawer } = props;\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar disableGutters={false} classes={{ root: classes.toolbarRoot }}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={handleToggleDrawer}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Messages  \n        </Typography>\n        {/* <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <PersonIcon />\n        </IconButton> */}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React, { Fragment, Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(7),\n    overflowX: \"hidden\"\n  },\n  contentShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n});\n\nclass MainLayout extends Component {\n  state = {\n    open: false\n  };\n\n  handleToggleDrawer = () => {\n    this.setState(prevState => {\n      return { open: !prevState.open };\n    });\n  };\n\n  render() {\n    const { classes, children } = this.props;\n    return (\n      <Fragment>\n        <div className={classes.root}>\n          <Header\n            handleToggleDrawer={this.handleToggleDrawer}\n          />\n          <main\n            className={classNames(classes.content)}\n          >\n            {children}\n          </main>\n        </div>\n        {/* <Sidebar open={this.state.open} drawerWidth={drawerWidth} /> */}\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainLayout);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"fixed\",\n    top: theme.spacing(8),\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  }\n});\n\nconst Sidebar = props => {\n  const { open, classes } = props;\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: classNames(\n          classes.drawerPaper,\n          !open && classes.drawerPaperClose\n        )\n      }}\n      open={open}\n    >\n      <List>\n        <Link to=\"/\">\n          <ListItem button>\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n        </Link>\n        <Link to=\"/setting\">\n          <ListItem button>\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </Link>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default withStyles(styles)(Sidebar);\n","import React from \"react\";\n\nconst EmptyLayout = props => {\n  return <div style={{ height: \"inherit\" }}>{props.children}</div>;\n};\n\nexport default EmptyLayout;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { useSelector } from 'react-redux';\n\nimport Home from \"./containers/Home/Home\";\nimport Setting from \"./containers/Setting/Setting\";\n\nimport MainLayout from \"./layouts/MainLayout\";\nimport EmptyLayout from \"./layouts/EmptyLayout\";\n\nimport { getTheme } from \"./containers/Setting/settingsReducer\";\n\nconst NotFound = () => {\n  return <div>NotFound</div>;\n};\n\nconst DashboardRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <MainLayout>\n          <Component {...matchProps} />\n        </MainLayout>\n      )}\n    />\n  );\n};\n\nconst EmptyRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <EmptyLayout>\n          <Component {...matchProps} />\n        </EmptyLayout>\n      )}\n    />\n  );\n};\n\nexport default function App() {\n\n  const theTheme = useSelector(getTheme);\n\n     return (\n      <MuiThemeProvider theme={createMuiTheme(theTheme)}>\n        <CssBaseline />\n        <div style={{ height: \"100vh\" }}>\n          <Router>\n            <Switch>\n              <DashboardRoute path=\"/dashboard\" component={Home} />\n              <DashboardRoute path=\"/setting\" component={Setting} />\n              <DashboardRoute exact path=\"/\" component={Home} />\n              <EmptyRoute component={NotFound} />\n            </Switch>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    );\n};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const counter = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n  },\n});\n\nexport const { increment, decrement } = counter.actions;\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getCounter = state => state.counter.value;\n\nexport default counter.reducer;","import { configureStore } from '@reduxjs/toolkit';\n\nimport settings from \"../containers/Setting/settingsReducer\";\nimport counter from \"../containers/Home/counterReducer\"\n\nexport default configureStore({\n  reducer: {\n    settings: settings,\n    counter: counter,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}